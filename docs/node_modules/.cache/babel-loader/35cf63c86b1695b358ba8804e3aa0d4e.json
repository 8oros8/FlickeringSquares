{"ast":null,"code":"var _jsxFileName = \"/Users/andreysmirnov/Documents/\\u0424\\u0440\\u043E\\u043D\\u0442/flickeringSquares/flickeringsquares/src/index.js\";\n// noinspection JSPotentiallyInvalidUsageOfClassThis\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet gameOptions = {\n  numberRows: 2,\n  numberColumns: 2,\n  complexity: 5\n};\n\nclass Square extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"square\",\n      id: this.props.coords[0] + \":\" + this.props.coords[1],\n      onClick: this.activateButton,\n      children: this.props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Row extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.renderSquares = function (counter, rowNumber) {\n      let renderArray = [];\n\n      for (let i = 0; i < counter; i++) {\n        renderArray.push( /*#__PURE__*/_jsxDEV(Square, {\n          coords: [rowNumber, i],\n          flickeringMemory: this.props.flickeringMemory,\n          levelPassed: this.props.levelPassed\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 30\n        }, this));\n      }\n\n      return renderArray;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: this.renderSquares(gameOptions.numberColumns, this.props.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Board extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      flickeringMemory: [],\n      levelPassed: true\n    };\n\n    this.activateButton = function (e, square) {\n      if (this.state.flickeringMemory.length > 0) {\n        if (parseInt(this.props.flickeringMemory[0].id[0]) === square.props.coords[0] && parseInt(this.state.flickeringMemory[0].id[2]) === square.props.coords[1]) {\n          e.target.style.backgroundColor = 'white';\n          this.state.flickeringMemory.shift();\n          setTimeout(function () {\n            e.target.style.backgroundColor = '#799E00';\n          }, 900);\n        }\n      }\n\n      if (this.state.flickeringMemory.length === 0) {\n        this.setState({\n          levelPassed: true\n        });\n      }\n    };\n\n    this.activateButton = this.activateButton.bind(this);\n\n    this.clickHandler = function () {\n      // noinspection JSPotentiallyInvalidUsageOfClassThis\n      if (this.state.levelPassed === true) {\n        // noinspection JSPotentiallyInvalidUsageOfClassThis\n        this.setState({\n          levelPassed: false,\n          flickeringMemory: this.startFlickering()\n        });\n      }\n    };\n\n    this.clickHandler = this.clickHandler.bind(this);\n\n    this.renderRows = function (counter) {\n      let renderArray = [];\n\n      for (let i = 0; i < counter; i++) {\n        renderArray.push( /*#__PURE__*/_jsxDEV(Row, {\n          value: i,\n          flickeringMemory: this.state.flickeringMemory,\n          levelPassed: this.state.levelPassed\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 30\n        }, this));\n      }\n\n      return renderArray;\n    };\n\n    this.randomFlicker = function (root) {\n      let elementsArray = Array.from(root.querySelectorAll('.square'));\n      let randomNumbers = [];\n      let randomFlickeringArray = [];\n      let min = 0;\n      let max = gameOptions.numberColumns * gameOptions.numberRows - 1;\n\n      for (let i = 0; i < gameOptions.complexity; i++) {\n        let randomIndex = Math.floor(Math.random() * (max - min + 1)) + min;\n        randomNumbers.push(randomIndex);\n      }\n\n      for (let index of randomNumbers) {\n        randomFlickeringArray.push(elementsArray[index]);\n      }\n\n      return randomFlickeringArray;\n    };\n\n    this.startFlickering = function () {\n      let flickeringArray = this.randomFlicker(document.getElementById('root'));\n\n      for (let i = 0; i < flickeringArray.length; i++) {\n        let timeout = i === 0 ? 0 : i * 1500;\n        setTimeout(function () {\n          flickeringArray[i].style.background = 'white';\n        }, timeout);\n        setTimeout(function () {\n          flickeringArray[i].style.background = '#799E00';\n        }, timeout + 900);\n      }\n\n      return flickeringArray;\n    };\n\n    this.startFlickering = this.startFlickering.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.renderRows(gameOptions.numberRows), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: 'startButton',\n        onClick: this.clickHandler,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 136,\n  columnNumber: 5\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/Users/andreysmirnov/Documents/Фронт/flickeringSquares/flickeringsquares/src/index.js"],"names":["React","ReactDOM","gameOptions","numberRows","numberColumns","complexity","Square","Component","render","props","coords","activateButton","value","Row","renderSquares","counter","rowNumber","renderArray","i","push","flickeringMemory","levelPassed","Board","state","e","square","length","parseInt","id","target","style","backgroundColor","shift","setTimeout","setState","bind","clickHandler","startFlickering","renderRows","randomFlicker","root","elementsArray","Array","from","querySelectorAll","randomNumbers","randomFlickeringArray","min","max","randomIndex","Math","floor","random","index","flickeringArray","document","getElementById","timeout","background","Game"],"mappings":"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","sourcesContent":["\n// noinspection JSPotentiallyInvalidUsageOfClassThis\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nlet gameOptions = {\n    numberRows: 2,\n    numberColumns: 2,\n    complexity: 5,\n}\n\nclass Square extends React.Component {\n    render() {\n        return (\n            <button className=\"square\" id={this.props.coords[0] + \":\" + this.props.coords[1]} onClick={this.activateButton}>\n                {this.props.value}\n            </button>\n        );\n    }\n}\n\nclass Row extends React.Component {\n    renderSquares = function (counter, rowNumber) {\n        let renderArray = []\n        for (let i = 0; i < counter; i++) {\n            renderArray.push(<Square key = {i} coords = {[rowNumber, i]} flickeringMemory = {this.props.flickeringMemory} levelPassed = {this.props.levelPassed} />)\n        }\n        return renderArray\n    }\n    render() {\n        return (\n            <div className=\"board-row\">\n                {this.renderSquares(gameOptions.numberColumns, this.props.value)}\n            </div>\n        )\n    }\n}\n\nclass Board extends React.Component {\n    state = {\n        flickeringMemory: [],\n        levelPassed: true,\n    }\n    activateButton = function (e, square) {\n        if (this.state.flickeringMemory.length > 0) {\n            if ((parseInt(this.props.flickeringMemory[0].id[0]) === square.props.coords[0]) && (parseInt(this.state.flickeringMemory[0].id[2]) === square.props.coords[1])) {\n                e.target.style.backgroundColor = 'white'\n                this.state.flickeringMemory.shift()\n                setTimeout(function () {\n                    e.target.style.backgroundColor = '#799E00'\n                }, 900)\n            }\n        }\n        if (this.state.flickeringMemory.length === 0) {\n            this.setState({\n                levelPassed: true,\n            })\n        }\n    }\n    activateButton = this.activateButton.bind(this)\n    clickHandler = function () {\n        // noinspection JSPotentiallyInvalidUsageOfClassThis\n        if (this.state.levelPassed === true) {\n            // noinspection JSPotentiallyInvalidUsageOfClassThis\n            this.setState({\n                levelPassed: false,\n                flickeringMemory: this.startFlickering(),\n            })\n        }\n    }\n    clickHandler = this.clickHandler.bind(this)\n    renderRows = function (counter) {\n        let renderArray = []\n        for (let i = 0; i < counter; i++) {\n            renderArray.push(<Row key={i} value = {i} flickeringMemory = {this.state.flickeringMemory} levelPassed = {this.state.levelPassed} />)\n        }\n        return renderArray\n    } \n    randomFlicker = function (root) {\n        let elementsArray = Array.from(root.querySelectorAll('.square'))\n        let randomNumbers = []\n        let randomFlickeringArray = []\n        let min = 0\n        let max = gameOptions.numberColumns*gameOptions.numberRows - 1\n        for (let i = 0; i < gameOptions.complexity; i++) {\n            let randomIndex = Math.floor(Math.random() * (max - min + 1)) + min\n            randomNumbers.push(randomIndex)\n        }\n        for (let index of randomNumbers) {\n            randomFlickeringArray.push(elementsArray[index])\n        }\n        return randomFlickeringArray\n    }\n\n    startFlickering = function () {\n        let flickeringArray = this.randomFlicker(document.getElementById('root'))\n        for (let i = 0; i < flickeringArray.length; i++) {\n            let timeout = i === 0? 0 : i * 1500\n            setTimeout(function () {\n                flickeringArray[i].style.background = 'white'\n            }, timeout)\n            setTimeout(function () {\n                flickeringArray[i].style.background = '#799E00'\n            }, timeout+900)\n        }\n        return flickeringArray\n    }\n    startFlickering = this.startFlickering.bind(this)\n    render() {\n        return (\n            <div>\n                {this.renderRows(gameOptions.numberRows)}\n                <button className={'startButton'} onClick={this.clickHandler}>\n                    Start\n                </button>\n            </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    render() {\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board />\n                </div>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);\n\n\n"]},"metadata":{},"sourceType":"module"}