{"ast":null,"code":"var _jsxFileName = \"/Users/andreysmirnov/Documents/\\u0424\\u0440\\u043E\\u043D\\u0442/flickeringSquares/flickeringsquares/src/index.js\";\n// noinspection JSPotentiallyInvalidUsageOfClassThis\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet timeoutStorage = [];\n\nclass Square extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.activateButton = function (e) {\n      if (this.props.flickeringMemory.length > 0) {\n        if (parseInt(this.props.flickeringMemory[0].id[0]) === this.props.coords[0] && parseInt(this.props.flickeringMemory[0].id[2]) === this.props.coords[1]) {\n          e.target.style.backgroundColor = 'white';\n          this.props.flickeringMemory.shift();\n\n          if (this.props.flickeringMemory.length === 0) {\n            this.props.updateLevelStatus(true);\n          }\n\n          setTimeout(function () {\n            e.target.style.backgroundColor = '#799E00';\n          }, 500);\n        } else {\n          e.target.style.backgroundColor = 'red';\n\n          for (let timeoutId of timeoutStorage) {\n            clearTimeout(timeoutId);\n          }\n\n          for (let square of document.querySelectorAll('.square')) {\n            setTimeout(function () {\n              square.style.background = '#799E00';\n            }, 500);\n          }\n\n          let updateMistakeStatus = this.props.updateMistakeStatus.bind(this);\n          setTimeout(function () {\n            e.target.style.backgroundColor = '#799E00';\n          }, 500);\n          setTimeout(function () {\n            updateMistakeStatus(true);\n          }, 2000);\n        }\n      }\n    };\n\n    this.activateButton = this.activateButton.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"square\",\n      id: this.props.coords[0] + \":\" + this.props.coords[1],\n      onClick: this.activateButton,\n      children: this.props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Row extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.renderSquares = function (counter, rowNumber) {\n      let renderArray = [];\n\n      for (let i = 0; i < counter; i++) {\n        renderArray.push( /*#__PURE__*/_jsxDEV(Square, {\n          coords: [rowNumber, i],\n          flickeringMemory: this.props.flickeringMemory,\n          levelPassed: this.props.levelPassed,\n          updateLevelStatus: this.props.updateLevelStatus,\n          updateMistakeStatus: this.props.updateMistakeStatus\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 30\n        }, this));\n      }\n\n      return renderArray;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: this.renderSquares(this.props.numberColumns, this.props.rowNumber)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Board extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      flickeringMemory: [],\n      levelPassed: false,\n      levelNumber: 0,\n      mistakeMade: false,\n      squaresArray: [],\n      numberRows: 3,\n      numberColumns: 3,\n      complexity: 2\n    };\n\n    this.updateLevelStatus = value => {\n      this.setState({\n        levelPassed: value\n      });\n    };\n\n    this.incrementLevelNumber = value => {\n      let newLevelNumber = this.state.levelNumber + value;\n      this.setState({\n        levelNumber: newLevelNumber,\n        complexity: 2 + Math.ceil(newLevelNumber / 2),\n        numberColumns: 3 + Math.floor(newLevelNumber) / 5,\n        numberRows: 3 + Math.floor(newLevelNumber) / 5\n      });\n      let startClickHandler = this.startClickHandler.bind(this);\n      let updateSquaresArray = this.updateSquaresArray.bind(this);\n      setTimeout(function () {\n        updateSquaresArray();\n        startClickHandler();\n      }, 2000);\n    };\n\n    this.updateMistakeStatus = value => {\n      this.setState({\n        mistakeMade: value\n      });\n    };\n\n    this.updateSquaresArray = () => {\n      this.setState({\n        squaresArray: Array.from(document.getElementById('root').querySelectorAll('.square'))\n      });\n    };\n\n    this.startClickHandler = function () {\n      // noinspection JSPotentiallyInvalidUsageOfClassThis\n      if (this.state.levelPassed === true || this.state.mistakeMade === true || this.state.levelNumber === 0) {\n        // noinspection JSPotentiallyInvalidUsageOfClassThis\n        this.setState({\n          levelPassed: false,\n          flickeringMemory: this.startFlickering()\n        });\n      }\n    };\n\n    this.startClickHandler = this.startClickHandler.bind(this);\n\n    this.resetClickHandler = function () {\n      for (let timeoutId of timeoutStorage) {\n        clearTimeout(timeoutId);\n      }\n\n      for (let square of document.querySelectorAll('.square')) {\n        square.style.background = '#799E00';\n      }\n\n      this.setState({\n        flickeringMemory: [],\n        levelPassed: false,\n        levelNumber: 0,\n        mistakeMade: false,\n        complexity: 2,\n        numberColumns: 3,\n        numberRows: 3\n      });\n    };\n\n    this.resetClickHandler = this.resetClickHandler.bind(this);\n\n    this.renderRows = function (counter) {\n      let renderArray = [];\n\n      for (let i = 0; i < counter; i++) {\n        renderArray.push( /*#__PURE__*/_jsxDEV(Row, {\n          rowNumber: i,\n          flickeringMemory: this.state.flickeringMemory,\n          levelPassed: this.state.levelPassed,\n          updateLevelStatus: this.updateLevelStatus,\n          updateMistakeStatus: this.updateMistakeStatus,\n          numberRows: this.state.numberRows,\n          numberColumns: this.state.numberColumns\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 30\n        }, this));\n      }\n\n      return renderArray;\n    };\n\n    this.randomFlicker = function (squaresArray) {\n      let elementsArray = squaresArray.length === 0 ? Array.from(document.getElementById('root').querySelectorAll('.square')) : squaresArray;\n      let randomNumbers = [];\n      let randomFlickeringArray = [];\n      let min = 0;\n      let max = this.state.numberColumns * this.state.numberRows - 1;\n\n      for (let i = 0; i < this.state.complexity; i++) {\n        let randomIndex = Math.floor(Math.random() * (max - min + 1)) + min;\n        randomNumbers.push(randomIndex);\n      }\n\n      for (let index of randomNumbers) {\n        randomFlickeringArray.push(elementsArray[index]);\n      }\n\n      return randomFlickeringArray;\n    };\n\n    this.randomFlicker = this.randomFlicker.bind(this);\n\n    this.startFlickering = function () {\n      let flickeringArray = this.randomFlicker(this.state.squaresArray);\n\n      for (let i = 0; i < flickeringArray.length; i++) {\n        let timeout = i === 0 ? 0 : i * 1500;\n        let firstTimeoutId = setTimeout(function () {\n          flickeringArray[i].style.background = 'white';\n        }, timeout);\n        timeoutStorage.push(firstTimeoutId);\n        let secondTimeoutId = setTimeout(function () {\n          flickeringArray[i].style.background = '#799E00';\n        }, timeout + 900);\n        timeoutStorage.push(secondTimeoutId);\n      }\n\n      return flickeringArray;\n    };\n\n    this.startFlickering = this.startFlickering.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevState.mistakeMade === false && this.state.mistakeMade === true) {\n      this.updateMistakeStatus(false);\n      this.startClickHandler();\n    }\n\n    if (prevState.levelPassed === false && this.state.levelPassed === true) {\n      this.incrementLevelNumber(1);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.renderRows(this.state.numberRows), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'buttonsWrapper',\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: 'mainButton',\n          onClick: this.startClickHandler,\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: 'mainButton',\n          onClick: this.resetClickHandler,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'levelInfo',\n        children: [\"Level: \", this.state.levelNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 238,\n  columnNumber: 5\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/Users/andreysmirnov/Documents/Фронт/flickeringSquares/flickeringsquares/src/index.js"],"names":["React","ReactDOM","timeoutStorage","Square","Component","activateButton","e","props","flickeringMemory","length","parseInt","id","coords","target","style","backgroundColor","shift","updateLevelStatus","setTimeout","timeoutId","clearTimeout","square","document","querySelectorAll","background","updateMistakeStatus","bind","render","value","Row","renderSquares","counter","rowNumber","renderArray","i","push","levelPassed","numberColumns","Board","state","levelNumber","mistakeMade","squaresArray","numberRows","complexity","setState","incrementLevelNumber","newLevelNumber","Math","ceil","floor","startClickHandler","updateSquaresArray","Array","from","getElementById","startFlickering","resetClickHandler","renderRows","randomFlicker","elementsArray","randomNumbers","randomFlickeringArray","min","max","randomIndex","random","index","flickeringArray","timeout","firstTimeoutId","secondTimeoutId","componentDidUpdate","prevProps","prevState","snapshot","Game"],"mappings":"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","sourcesContent":["\n// noinspection JSPotentiallyInvalidUsageOfClassThis\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nlet timeoutStorage = []\n\nclass Square extends React.Component {\n    activateButton = function (e) {\n        if (this.props.flickeringMemory.length > 0) {\n            if ((parseInt(this.props.flickeringMemory[0].id[0]) === this.props.coords[0]) && (parseInt(this.props.flickeringMemory[0].id[2]) === this.props.coords[1])) {\n                e.target.style.backgroundColor = 'white'\n                this.props.flickeringMemory.shift()\n                if (this.props.flickeringMemory.length === 0) {\n                    this.props.updateLevelStatus(true)\n                }\n                setTimeout(function () {\n                    e.target.style.backgroundColor = '#799E00'\n                }, 500)\n            }\n            else {\n                e.target.style.backgroundColor = 'red'\n                for (let timeoutId of timeoutStorage) {\n                    clearTimeout(timeoutId)\n                }\n                for (let square of document.querySelectorAll('.square')) {\n                    setTimeout(function () {\n                        square.style.background = '#799E00'\n                    }, 500)\n                }\n                let updateMistakeStatus = this.props.updateMistakeStatus.bind(this)\n                setTimeout(function () {\n                    e.target.style.backgroundColor = '#799E00'\n                }, 500)\n                setTimeout(function () {\n                    updateMistakeStatus(true)\n                }, 2000)\n            }\n        }\n    }\n    activateButton = this.activateButton.bind(this)\n    render() {\n        return (\n            <button className=\"square\" id={this.props.coords[0] + \":\" + this.props.coords[1]} onClick={this.activateButton}>\n                {this.props.value}\n            </button>\n        );\n    }\n}\n\nclass Row extends React.Component {\n    renderSquares = function (counter, rowNumber) {\n        let renderArray = []\n        for (let i = 0; i < counter; i++) {\n            renderArray.push(<Square key = {i}\n                                     coords = {[rowNumber, i]}\n                                     flickeringMemory = {this.props.flickeringMemory}\n                                     levelPassed = {this.props.levelPassed}\n                                     updateLevelStatus = {this.props.updateLevelStatus}\n                                     updateMistakeStatus = {this.props.updateMistakeStatus}\n            />)\n        }\n        return renderArray\n    }\n    render() {\n        return (\n            <div className=\"board-row\">\n                {this.renderSquares(this.props.numberColumns, this.props.rowNumber)}\n            </div>\n        )\n    }\n}\n\nclass Board extends React.Component {\n    state = {\n        flickeringMemory: [],\n        levelPassed: false,\n        levelNumber: 0,\n        mistakeMade: false,\n        squaresArray: [],\n        numberRows: 3,\n        numberColumns: 3,\n        complexity: 2,\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if ((prevState.mistakeMade === false) && (this.state.mistakeMade === true)) {\n            this.updateMistakeStatus(false)\n            this.startClickHandler()\n        }\n        if ((prevState.levelPassed === false) && (this.state.levelPassed === true)) {\n            this.incrementLevelNumber(1)\n        }\n    }\n\n    updateLevelStatus = (value) => {\n        this.setState({\n            levelPassed: value\n        })\n    }\n    incrementLevelNumber = (value) => {\n        let newLevelNumber = this.state.levelNumber + value\n        this.setState({\n            levelNumber: newLevelNumber,\n            complexity: 2 + (Math.ceil(newLevelNumber/2)),\n            numberColumns: 3 + (Math.floor(newLevelNumber)/5),\n            numberRows: 3 + (Math.floor(newLevelNumber)/5),\n        })\n        let startClickHandler = this.startClickHandler.bind(this)\n        let updateSquaresArray = this.updateSquaresArray.bind(this)\n        setTimeout(function () {\n            updateSquaresArray()\n            startClickHandler()\n        }, 2000)\n    }\n    updateMistakeStatus = (value) => {\n        this.setState({\n            mistakeMade: value\n        })\n    }\n    updateSquaresArray = () => {\n        this.setState({\n            squaresArray: Array.from(document.getElementById('root').querySelectorAll('.square'))\n        })\n    }\n    startClickHandler = function () {\n        // noinspection JSPotentiallyInvalidUsageOfClassThis\n        if ((this.state.levelPassed === true) || (this.state.mistakeMade === true) || (this.state.levelNumber === 0)){\n            // noinspection JSPotentiallyInvalidUsageOfClassThis\n            this.setState({\n                levelPassed: false,\n                flickeringMemory: this.startFlickering(),\n            })\n        }\n    }\n    startClickHandler = this.startClickHandler.bind(this)\n    resetClickHandler = function () {\n        for (let timeoutId of timeoutStorage) {\n            clearTimeout(timeoutId)\n        }\n        for (let square of document.querySelectorAll('.square')) {\n            square.style.background = '#799E00'\n        }\n        this.setState({\n            flickeringMemory: [],\n            levelPassed: false,\n            levelNumber: 0,\n            mistakeMade: false,\n            complexity: 2,\n            numberColumns: 3,\n            numberRows: 3,\n        })\n    }\n    resetClickHandler = this.resetClickHandler.bind(this)\n    renderRows = function (counter) {\n        let renderArray = []\n        for (let i = 0; i < counter; i++) {\n            renderArray.push(<Row\n                key={i}\n                rowNumber = {i}\n                flickeringMemory = {this.state.flickeringMemory}\n                levelPassed = {this.state.levelPassed}\n                updateLevelStatus = {this.updateLevelStatus}\n                updateMistakeStatus = {this.updateMistakeStatus}\n                numberRows = {this.state.numberRows}\n                numberColumns = {this.state.numberColumns}\n            />)\n        }\n        return renderArray\n    }\n    randomFlicker = function (squaresArray) {\n        let elementsArray = squaresArray.length === 0 ? Array.from(document.getElementById('root').querySelectorAll('.square')) : squaresArray\n        let randomNumbers = []\n        let randomFlickeringArray = []\n        let min = 0\n        let max = this.state.numberColumns*this.state.numberRows - 1\n        for (let i = 0; i < this.state.complexity; i++) {\n            let randomIndex = Math.floor(Math.random() * (max - min + 1)) + min\n            randomNumbers.push(randomIndex)\n        }\n        for (let index of randomNumbers) {\n            randomFlickeringArray.push(elementsArray[index])\n        }\n        return randomFlickeringArray\n    }\n    randomFlicker = this.randomFlicker.bind(this)\n\n    startFlickering = function () {\n        let flickeringArray = this.randomFlicker(this.state.squaresArray)\n        for (let i = 0; i < flickeringArray.length; i++) {\n            let timeout = i === 0? 0 : i * 1500\n            let firstTimeoutId = setTimeout(function () {\n                flickeringArray[i].style.background = 'white'\n            }, timeout)\n            timeoutStorage.push(firstTimeoutId)\n            let secondTimeoutId = setTimeout(function () {\n                flickeringArray[i].style.background = '#799E00'\n            }, timeout+900)\n            timeoutStorage.push(secondTimeoutId)\n        }\n        return flickeringArray\n    }\n    startFlickering = this.startFlickering.bind(this)\n    render() {\n        return (\n            <div>\n                {this.renderRows(this.state.numberRows)}\n                <div className={'buttonsWrapper'}>\n                    <button className={'mainButton'} onClick={this.startClickHandler}>\n                        Start\n                    </button>\n                    <button className={'mainButton'} onClick={this.resetClickHandler}>\n                        Reset\n                    </button>\n                </div>\n                <div className={'levelInfo'}>\n                    Level: {this.state.levelNumber}\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    render() {\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board />\n                </div>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);\n\n\n"]},"metadata":{},"sourceType":"module"}