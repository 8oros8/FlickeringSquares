{"ast":null,"code":"var _jsxFileName = \"/Users/andreysmirnov/Documents/\\u0424\\u0440\\u043E\\u043D\\u0442/flickeringSquares/flickeringsquares/src/index.js\";\n// noinspection JSPotentiallyInvalidUsageOfClassThis\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet gameOptions = {\n  numberRows: 2,\n  numberColumns: 2,\n  complexity: 5\n};\n\nclass Square extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.activateButton = function (e) {\n      if (this.props.flickeringMemory.length > 0) {\n        if (parseInt(this.props.flickeringMemory[0].id[0]) === this.props.coords[0] && parseInt(this.props.flickeringMemory[0].id[2]) === this.props.coords[1]) {\n          e.target.style.backgroundColor = 'white';\n          this.props.flickeringMemory.shift();\n\n          if (this.props.flickeringMemory.length === 0) {\n            this.props.updateLevelStatus(true);\n          }\n\n          setTimeout(function () {\n            e.target.style.backgroundColor = '#799E00';\n          }, 500);\n        } else {\n          e.target.style.backgroundColor = 'red';\n          this.props.updateMistakeStatus(true);\n          setTimeout(function () {\n            e.target.style.backgroundColor = '#799E00';\n          }, 500);\n        }\n      }\n    };\n\n    this.activateButton = this.activateButton.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"square\",\n      id: this.props.coords[0] + \":\" + this.props.coords[1],\n      onClick: this.activateButton,\n      children: this.props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Row extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.renderSquares = function (counter, rowNumber) {\n      let renderArray = [];\n\n      for (let i = 0; i < counter; i++) {\n        renderArray.push( /*#__PURE__*/_jsxDEV(Square, {\n          coords: [rowNumber, i],\n          flickeringMemory: this.props.flickeringMemory,\n          updateLevelStatus: this.props.updateLevelStatus,\n          updateMistakeStatus: this.props.updateMistakeStatus\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 30\n        }, this));\n      }\n\n      return renderArray;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: this.renderSquares(gameOptions.numberColumns, this.key)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Board extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      flickeringMemory: [],\n      levelPassed: true,\n      mistakeMade: false\n    };\n\n    this.updateLevelStatus = value => {\n      this.setState({\n        levelPassed: value\n      });\n    };\n\n    this.updateMistakeStatus = value => {\n      this.setState({\n        mistakeMade: value\n      });\n    };\n\n    this.startClickHandler = function () {\n      // noinspection JSPotentiallyInvalidUsageOfClassThis\n      if (this.state.levelPassed === true) {\n        // noinspection JSPotentiallyInvalidUsageOfClassThis\n        this.setState({\n          levelPassed: false,\n          flickeringMemory: this.startFlickering()\n        });\n      }\n    };\n\n    this.startClickHandler = this.startClickHandler.bind(this);\n\n    this.renderRows = function (counter) {\n      let renderArray = [];\n\n      for (let i = 0; i < counter; i++) {\n        renderArray.push( /*#__PURE__*/_jsxDEV(Row, {\n          flickeringMemory: this.state.flickeringMemory,\n          updateLevelStatus: this.updateLevelStatus,\n          updateMistakeStatus: this.updateMistakeStatus\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 30\n        }, this));\n      }\n\n      return renderArray;\n    };\n\n    this.randomFlicker = function (root) {\n      let elementsArray = Array.from(root.querySelectorAll('.square'));\n      let randomNumbers = [];\n      let randomFlickeringArray = [];\n      let min = 0;\n      let max = gameOptions.numberColumns * gameOptions.numberRows - 1;\n\n      for (let i = 0; i < gameOptions.complexity; i++) {\n        let randomIndex = Math.floor(Math.random() * (max - min + 1)) + min;\n        randomNumbers.push(randomIndex);\n      }\n\n      for (let index of randomNumbers) {\n        randomFlickeringArray.push(elementsArray[index]);\n      }\n\n      return randomFlickeringArray;\n    };\n\n    this.startFlickering = function () {\n      let flickeringArray = this.randomFlicker(document.getElementById('root'));\n\n      for (let i = 0; i < flickeringArray.length; i++) {\n        let timeout = i === 0 ? 0 : i * 1500;\n        setTimeout(function () {\n          flickeringArray[i].style.background = 'white';\n        }, timeout);\n        setTimeout(function () {\n          flickeringArray[i].style.background = '#799E00';\n        }, timeout + 900);\n      }\n\n      return flickeringArray;\n    };\n\n    this.startFlickering = this.startFlickering.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevState.mistakeMade === false && this.state.mistakeMade === true) {\n      this.startClickHandler();\n      this.updateMistakeStatus(false);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.renderRows(gameOptions.numberRows), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: 'startButton',\n        onClick: this.startClickHandler,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 169,\n  columnNumber: 5\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/Users/andreysmirnov/Documents/Фронт/flickeringSquares/flickeringsquares/src/index.js"],"names":["React","ReactDOM","gameOptions","numberRows","numberColumns","complexity","Square","Component","activateButton","e","props","flickeringMemory","length","parseInt","id","coords","target","style","backgroundColor","shift","updateLevelStatus","setTimeout","updateMistakeStatus","bind","render","value","Row","renderSquares","counter","rowNumber","renderArray","i","push","key","Board","state","levelPassed","mistakeMade","setState","startClickHandler","startFlickering","renderRows","randomFlicker","root","elementsArray","Array","from","querySelectorAll","randomNumbers","randomFlickeringArray","min","max","randomIndex","Math","floor","random","index","flickeringArray","document","getElementById","timeout","background","componentDidUpdate","prevProps","prevState","snapshot","Game"],"mappings":"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","sourcesContent":["\n// noinspection JSPotentiallyInvalidUsageOfClassThis\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nlet gameOptions = {\n    numberRows: 2,\n    numberColumns: 2,\n    complexity: 5,\n}\n\nclass Square extends React.Component {\n    activateButton = function (e) {\n        if (this.props.flickeringMemory.length > 0) {\n            if ((parseInt(this.props.flickeringMemory[0].id[0]) === this.props.coords[0]) && (parseInt(this.props.flickeringMemory[0].id[2]) === this.props.coords[1])) {\n                e.target.style.backgroundColor = 'white'\n                this.props.flickeringMemory.shift()\n                if (this.props.flickeringMemory.length === 0) {\n                    this.props.updateLevelStatus(true)\n                }\n                setTimeout(function () {\n                    e.target.style.backgroundColor = '#799E00'\n                }, 500)\n            }\n            else {\n                e.target.style.backgroundColor = 'red'\n                this.props.updateMistakeStatus(true)\n                setTimeout(function () {\n                    e.target.style.backgroundColor = '#799E00'\n                }, 500)\n            }\n        }\n    }\n    activateButton = this.activateButton.bind(this)\n    render() {\n        return (\n            <button className=\"square\" id={this.props.coords[0] + \":\" + this.props.coords[1]} onClick={this.activateButton}>\n                {this.props.value}\n            </button>\n        );\n    }\n}\n\nclass Row extends React.Component {\n    renderSquares = function (counter, rowNumber) {\n        let renderArray = []\n        for (let i = 0; i < counter; i++) {\n            renderArray.push(<Square key = {i}\n                                     coords = {[rowNumber, i]}\n                                     flickeringMemory = {this.props.flickeringMemory}\n                                     updateLevelStatus = {this.props.updateLevelStatus}\n                                     updateMistakeStatus = {this.props.updateMistakeStatus}\n            />)\n        }\n        return renderArray\n    }\n    render() {\n        return (\n            <div className=\"board-row\">\n                {this.renderSquares(gameOptions.numberColumns, this.key)}\n            </div>\n        )\n    }\n}\n\nclass Board extends React.Component {\n    state = {\n        flickeringMemory: [],\n        levelPassed: true,\n        mistakeMade: false,\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if ((prevState.mistakeMade === false) && (this.state.mistakeMade === true)) {\n            this.startClickHandler()\n            this.updateMistakeStatus(false)\n        }\n    }\n\n    updateLevelStatus = (value) => {\n        this.setState({\n            levelPassed: value\n        })\n    }\n    updateMistakeStatus = (value) => {\n        this.setState({\n            mistakeMade: value\n        })\n    }\n    startClickHandler = function () {\n        // noinspection JSPotentiallyInvalidUsageOfClassThis\n        if (this.state.levelPassed === true) {\n            // noinspection JSPotentiallyInvalidUsageOfClassThis\n            this.setState({\n                levelPassed: false,\n                flickeringMemory: this.startFlickering(),\n            })\n        }\n    }\n    startClickHandler = this.startClickHandler.bind(this)\n    renderRows = function (counter) {\n        let renderArray = []\n        for (let i = 0; i < counter; i++) {\n            renderArray.push(<Row\n                key={i}\n                flickeringMemory = {this.state.flickeringMemory}\n                updateLevelStatus = {this.updateLevelStatus}\n                updateMistakeStatus = {this.updateMistakeStatus}\n            />)\n        }\n        return renderArray\n    }\n    randomFlicker = function (root) {\n        let elementsArray = Array.from(root.querySelectorAll('.square'))\n        let randomNumbers = []\n        let randomFlickeringArray = []\n        let min = 0\n        let max = gameOptions.numberColumns*gameOptions.numberRows - 1\n        for (let i = 0; i < gameOptions.complexity; i++) {\n            let randomIndex = Math.floor(Math.random() * (max - min + 1)) + min\n            randomNumbers.push(randomIndex)\n        }\n        for (let index of randomNumbers) {\n            randomFlickeringArray.push(elementsArray[index])\n        }\n        return randomFlickeringArray\n    }\n\n    startFlickering = function () {\n        let flickeringArray = this.randomFlicker(document.getElementById('root'))\n        for (let i = 0; i < flickeringArray.length; i++) {\n            let timeout = i === 0? 0 : i * 1500\n            setTimeout(function () {\n                flickeringArray[i].style.background = 'white'\n            }, timeout)\n            setTimeout(function () {\n                flickeringArray[i].style.background = '#799E00'\n            }, timeout+900)\n        }\n        return flickeringArray\n    }\n    startFlickering = this.startFlickering.bind(this)\n    render() {\n        return (\n            <div>\n                {this.renderRows(gameOptions.numberRows)}\n                <button className={'startButton'} onClick={this.startClickHandler}>\n                    Start\n                </button>\n            </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    render() {\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board />\n                </div>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);\n\n\n"]},"metadata":{},"sourceType":"module"}