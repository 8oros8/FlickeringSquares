{"ast":null,"code":"var _jsxFileName = \"/Users/andreysmirnov/Documents/\\u0424\\u0440\\u043E\\u043D\\u0442/flickeringSquares/flickeringsquares/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet gameOptions = {\n  numberRows: 4,\n  numberColumns: 4,\n  complexity: 5\n};\n\nclass Square extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.activateButton = function (e) {\n      if (this.props.flickeringMemory.length > 0) {\n        if (parseInt(this.props.flickeringMemory[0].id[0]) === this.props.coords[0] && parseInt(this.props.flickeringMemory[0].id[2]) === this.props.coords[1]) {\n          e.target.style.backgroundColor = 'white';\n          this.props.flickeringMemory.shift();\n        }\n      }\n    };\n\n    this.activateButton = this.activateButton.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"square\",\n      id: this.props.coords[0] + \":\" + this.props.coords[1],\n      onClick: this.activateButton,\n      children: this.props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Row extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.renderSquares = function (counter, rowNumber) {\n      let renderArray = [];\n\n      for (let i = 0; i < counter; i++) {\n        renderArray.push( /*#__PURE__*/_jsxDEV(Square, {\n          coords: [rowNumber, i],\n          flickeringMemory: this.props.flickeringMemory\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 30\n        }, this));\n      }\n\n      return renderArray;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: this.renderSquares(gameOptions.numberColumns, this.props.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Board extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      flickeringMemory: [],\n      levelPassed: true\n    };\n\n    this.clickHandler = function () {\n      // noinspection JSPotentiallyInvalidUsageOfClassThis\n      if (this.state.levelPassed === true) {\n        // noinspection JSPotentiallyInvalidUsageOfClassThis\n        this.setState({\n          levelPassed: false,\n          flickeringMemory: this.startFlickering()\n        });\n      }\n    };\n\n    this.clickHandler = this.clickHandler.bind(this);\n\n    this.renderRows = function (counter) {\n      let renderArray = [];\n\n      for (let i = 0; i < counter; i++) {\n        renderArray.push( /*#__PURE__*/_jsxDEV(Row, {\n          value: i,\n          flickeringMemory: this.state.flickeringMemory\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 30\n        }, this));\n      }\n\n      return renderArray;\n    };\n\n    this.randomFlicker = function (root) {\n      let elementsArray = Array.from(root.querySelectorAll('.square'));\n      elementsArray.sort(() => Math.random() - 0.5);\n      return elementsArray.slice(0, gameOptions.complexity);\n    };\n\n    this.startFlickering = function () {\n      let flickeringArray = this.randomFlicker(document.getElementById('root'));\n\n      for (let i = 0; i < flickeringArray.length; i++) {\n        let timeout = i === 0 ? 0 : i * 1000;\n        setTimeout(function () {\n          flickeringArray[i].style.background = 'white';\n        }, timeout);\n        setTimeout(function () {\n          flickeringArray[i].style.background = '#799E00';\n        }, timeout + 900);\n      }\n\n      return flickeringArray;\n    };\n\n    this.startFlickering = this.startFlickering.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.renderRows(gameOptions.numberRows), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: 'startButton',\n        onClick: this.clickHandler,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 116,\n  columnNumber: 5\n}, this), document.getElementById('root'));\nlet array = [2, 4, 54, 1, 8, 14];","map":{"version":3,"sources":["/Users/andreysmirnov/Documents/Фронт/flickeringSquares/flickeringsquares/src/index.js"],"names":["React","ReactDOM","gameOptions","numberRows","numberColumns","complexity","Square","Component","activateButton","e","props","flickeringMemory","length","parseInt","id","coords","target","style","backgroundColor","shift","bind","render","value","Row","renderSquares","counter","rowNumber","renderArray","i","push","Board","state","levelPassed","clickHandler","setState","startFlickering","renderRows","randomFlicker","root","elementsArray","Array","from","querySelectorAll","sort","Math","random","slice","flickeringArray","document","getElementById","timeout","setTimeout","background","Game","array"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nlet gameOptions = {\n    numberRows: 4,\n    numberColumns: 4,\n    complexity: 5,\n}\n\nclass Square extends React.Component {\n    activateButton = function (e) {\n        if (this.props.flickeringMemory.length > 0) {\n            if ((parseInt(this.props.flickeringMemory[0].id[0]) === this.props.coords[0]) && (parseInt(this.props.flickeringMemory[0].id[2]) === this.props.coords[1])) {\n                e.target.style.backgroundColor = 'white'\n                this.props.flickeringMemory.shift()\n            }\n        }\n    }\n    activateButton = this.activateButton.bind(this)\n    render() {\n        return (\n            <button className=\"square\" id={this.props.coords[0] + \":\" + this.props.coords[1]} onClick={this.activateButton}>\n                {this.props.value}\n            </button>\n        );\n    }\n}\n\nclass Row extends React.Component {\n    renderSquares = function (counter, rowNumber) {\n        let renderArray = []\n        for (let i = 0; i < counter; i++) {\n            renderArray.push(<Square key = {i} coords = {[rowNumber, i]} flickeringMemory = {this.props.flickeringMemory}/>)\n        }\n        return renderArray\n    }\n    render() {\n        return (\n            <div className=\"board-row\">\n                {this.renderSquares(gameOptions.numberColumns, this.props.value)}\n            </div>\n        )\n    }\n}\n\nclass Board extends React.Component {\n    state = {\n        flickeringMemory: [],\n        levelPassed: true,\n    }\n    clickHandler = function () {\n        // noinspection JSPotentiallyInvalidUsageOfClassThis\n        if (this.state.levelPassed === true) {\n            // noinspection JSPotentiallyInvalidUsageOfClassThis\n            this.setState({\n                levelPassed: false,\n                flickeringMemory: this.startFlickering(),\n            })\n        }\n    }\n    clickHandler = this.clickHandler.bind(this)\n    renderRows = function (counter) {\n        let renderArray = []\n        for (let i = 0; i < counter; i++) {\n            renderArray.push(<Row key={i} value = {i} flickeringMemory = {this.state.flickeringMemory}/>)\n        }\n        return renderArray\n    }\n    randomFlicker = function (root) {\n        let elementsArray = Array.from(root.querySelectorAll('.square'))\n        elementsArray.sort(() => Math.random() - 0.5)\n        return elementsArray.slice(0, gameOptions.complexity)\n    }\n\n    startFlickering = function () {\n        let flickeringArray = this.randomFlicker(document.getElementById('root'))\n        for (let i = 0; i < flickeringArray.length; i++) {\n            let timeout = i === 0? 0 : i * 1000\n            setTimeout(function () {\n                flickeringArray[i].style.background = 'white'\n            }, timeout)\n            setTimeout(function () {\n                flickeringArray[i].style.background = '#799E00'\n            }, timeout+900)\n        }\n        return flickeringArray\n    }\n    startFlickering = this.startFlickering.bind(this)\n    render() {\n        return (\n            <div>\n                {this.renderRows(gameOptions.numberRows)}\n                <button className={'startButton'} onClick={this.clickHandler}>\n                    Start\n                </button>\n            </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    render() {\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board />\n                </div>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);\n\n\n\nlet array = [2, 4, 54, 1, 8, 14]\n\n"]},"metadata":{},"sourceType":"module"}